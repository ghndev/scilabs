generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id
  name          String     @unique
  email         String     @unique
  password      String?
  emailVerified DateTime?
  image         String?
  bio           String?
  googleId      String?    @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  sessions      Session[]
  posts         Post[]
  likes         Like[]
  bookmarks     Bookmark[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String     @id @default(cuid())
  topic     Topic
  title     String
  content   Json
  thumbnail String?
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  likes     Like[]
  bookmarks Bookmark[]

  @@index([topic])
  @@index([authorId])
}

model Like {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  @@id(name: "id", [userId, postId])
}

model Bookmark {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  @@id(name: "id", [userId, postId])
}

enum Topic {
  PHYSICS
  CHEMISTRY
  BIOLOGY
  ASTRONOMY
  NEUROSCIENCE
  GENETICS
  ROBOTICS
  AI
  QUANTUM
  NANOTECHNOLOGY
  BIOTECHNOLOGY
  SPACE
  CLIMATE
  ECOLOGY
  OCEANOGRAPHY
  PALEONTOLOGY
  DAILY
  OTHER
}
